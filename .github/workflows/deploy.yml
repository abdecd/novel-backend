name: Deploy to Server
on:
  push:
    branches:
      - dev

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Setup Java JDK
      uses: actions/setup-java@v4
      with:
        java-version: 21
        distribution: 'temurin'

    - name: Build with Maven
      run: mvn clean package -Pprod -DskipTests=true

    - name: Setup SSH Keys
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

    - name: Copy to Server and Run
      run: |
        cd business/target
        ssh ${{ secrets.USER_NAME }}@${{ secrets.SERVER_IP }} 'mkdir -p ~/novel-backend'
        scp novel-backend-main.jar ${{ secrets.USER_NAME }}@${{ secrets.SERVER_IP }}:~/novel-backend
        scp ../Dockerfile ${{ secrets.USER_NAME }}@${{ secrets.SERVER_IP }}:~/novel-backend
        ssh ${{ secrets.USER_NAME }}@${{ secrets.SERVER_IP }} '
          cd ~/novel-backend
          docker stop novel-backend | true
          docker rm novel-backend | true
          docker build -t novel-backend:latest .
          docker run --name novel-backend -p 8081:8081 --restart unless-stopped -v /home/${{ secrets.USER_NAME }}/novel-backend:/novel-backend -d novel-backend:latest
        '
