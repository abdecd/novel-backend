<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.abdecd.novelbackend.business.mapper.ReaderHistoryMapper">
    <select id="listReaderHistoryByNovel"
            resultType="com.abdecd.novelbackend.business.pojo.vo.reader.ReaderHistoryVO">
        SELECT rh.id, rh.novel_id, rh.volume_number, rh.chapter_number, t1.timestamp,
        ni.title as novelTitle, ni.author, ni.cover,
        nc.title as chapterTitle
        FROM (
            SELECT MAX(rh.id) as id, MAX(rh.timestamp) as timestamp
            FROM reader_history rh
            <where>
                <if test="userId != null">
                    and rh.user_id = #{userId}
                </if>
                <if test="minDateTime != null">
                    and rh.timestamp &gt;= #{minDateTime}
                </if>
                <if test="maxDateTime != null">
                    and rh.timestamp &lt;= #{maxDateTime}
                </if>
                <if test="novelId != null">
                    and rh.novel_id = #{novelId}
                </if>
                and status = #{enableStatus}
            </where>
            GROUP BY rh.novel_id, rh.volume_number, rh.chapter_number
            ORDER BY timestamp desc
            limit #{pageSize}
        ) t1
        LEFT JOIN reader_history rh ON rh.id = t1.id
        LEFT JOIN novel_info ni ON rh.novel_id = ni.id
        LEFT JOIN novel_chapter nc ON rh.novel_id = nc.novel_id AND rh.volume_number = nc.volume_number AND rh.chapter_number = nc.chapter_number
    </select>
    <select id="getRankList" resultType="java.lang.Integer">
        SELECT t1.novel_id
        FROM (
            SELECT rh.novel_id, COUNT(1) as count
            FROM reader_history rh
            WHERE rh.timestamp &gt;= #{startTime}
                and rh.timestamp &lt; #{endTime}
            GROUP BY rh.novel_id, rh.user_id
        ) t1
        group by t1.novel_id
        order by SUM(LEAST(count, 10)) desc
        limit 100
    </select>
    <select id="getRankListByTagName" resultType="java.lang.Integer">
        WITH novels AS (
            SELECT nat.novel_id
            FROM novel_tags nt
                 JOIN novel_and_tags nat ON nt.id = nat.tag_id
            WHERE nt.tag_name = #{tagName}
        )
        SELECT t1.novel_id
        FROM (
            SELECT rh.novel_id, COUNT(1) as count
            FROM novels
                JOIN reader_history rh ON novels.novel_id = rh.novel_id
            WHERE rh.timestamp &gt;= #{startTime}
                and rh.timestamp &lt; #{endTime}
            GROUP BY rh.novel_id, rh.user_id
        ) t1
        group by t1.novel_id
        order by SUM(LEAST(count, 10)) desc
        limit 100
    </select>
    <select id="getRandomRankList" resultType="java.lang.Integer">
        SELECT ni.id
        FROM novel_info ni
        ORDER BY RAND()
        LIMIT 100
    </select>
    <select id="getRandomRankListByTagName"
            resultType="java.lang.Integer">
        WITH t1 AS (
            SELECT nat.novel_id
            FROM novel_tags nt
                 JOIN novel_and_tags nat ON nt.id = nat.tag_id
            WHERE nt.tag_name = #{tagName}
        )
        SELECT t1.novel_id
        FROM t1
        ORDER BY RAND()
        LIMIT 100
    </select>
    <select id="getReaderFavoriteTagIds" resultType="java.lang.Integer">
        SELECT nat.tag_id
        FROM (
            SELECT novel_id, COUNT(1) as count
            FROM reader_history rh
            WHERE rh.user_id = #{userId}
            GROUP BY rh.novel_id
        ) t1
            LEFT JOIN novel_and_tags nat ON t1.novel_id = nat.novel_id
        GROUP BY nat.tag_id
        ORDER BY SUM(LEAST(count, 10)) desc
        LIMIT 2
    </select>
    <select id="getHotTagIds" resultType="java.lang.Integer">
        SELECT nat.tag_id
        FROM (
            SELECT novel_id, COUNT(1) as count
            FROM reader_history rh
            WHERE rh.timestamp &gt;= #{startTime} AND rh.timestamp &lt; #{endTime}
            GROUP BY rh.novel_id, rh.user_id
        ) t1
            LEFT JOIN novel_and_tags nat ON t1.novel_id = nat.novel_id
        GROUP BY nat.tag_id
        ORDER BY SUM(LEAST(count, 10)) desc
        LIMIT 5
    </select>
</mapper>